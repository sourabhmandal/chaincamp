import type { NextPage } from 'next';
import Head from 'next/head';
import { ThemeProvider, BaseStyles } from '@primer/react';
import { baseTheme } from '../themes/base';
import { useCookies } from 'react-cookie';
import Router, { useRouter } from 'next/router';
import { useEffect } from 'react';
import { useAuth } from '../hooks/use-auth';
import { frontendRoute } from '../constants/routes';

type Props = {
  accessToken: string;
  refreshToken: string;
};

const Sessions: NextPage = () => {
  const router = useRouter();
  const { login } = useAuth();

  return (
    <ThemeProvider theme={baseTheme}>
      <BaseStyles>
        <Head>
          <title>Sessions</title>
          <meta
            name="description"
            content="Generated by create next app"
          />
          <link
            rel="icon"
            href="/favicon.ico"
          />
        </Head>

        <main>
          <div className="flex flex-col justify-center items-center text-center h-screen">
            <h1 className="font-bold text-5xl">Welcome to IncTools</h1>
            <br />
            <p className=" text-gray-400 text-lg">
              Wait till we setup a Session for you
            </p>
          </div>
        </main>
      </BaseStyles>
    </ThemeProvider>
  );
};

Sessions.getInitialProps = async (ctx): Promise<any> => {
  try {
    // Validating access payload
    if (ctx.query.error) throw ctx.query.error;

    // Setting http-only cookies on client
    const { accessToken, refreshToken } = ctx.query;
    return { accessToken, refreshToken };
  } catch (err) {
    console.error(err);
    Router.push(frontendRoute.LANDING);
  }
  return {};
};
export default Sessions;
